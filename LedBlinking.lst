;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 10/05/2018 10:01:43 PM
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0xF000EF65  	GOTO        202
0x0004	0x0000      	NOP
0x0006	0x0000      	NOP
0x0008	0xF000EF00  	GOTO        0
0x000C	0x0000      	NOP
0x000E	0x0000      	NOP
0x0010	0x0000      	NOP
0x0012	0x0000      	NOP
0x0014	0x0000      	NOP
0x0016	0x0000      	NOP
0x0018	0xD7F3      	BRA         0
_strcpy:
;__Lib_CString.c,126 :: 		
;__Lib_CString.c,129 :: 		
0x001C	0xF004C0AF  	MOVFF       FARG_strcpy_to, R4
0x0020	0xF005C0B0  	MOVFF       FARG_strcpy_to+1, R5
;__Lib_CString.c,130 :: 		
L_strcpy34:
0x0024	0xF002C004  	MOVFF       R4, R2
0x0028	0xF003C005  	MOVFF       R5, R3
0x002C	0x4A04      	INFSNZ      R4, 1 
0x002E	0x2A05      	INCF        R5, 1 
0x0030	0xF000C0B1  	MOVFF       FARG_strcpy_from, R0
0x0034	0xF001C0B2  	MOVFF       FARG_strcpy_from+1, R1
0x0038	0x0100      	MOVLB       0
0x003A	0x4BB1      	INFSNZ      FARG_strcpy_from, 1, 1
0x003C	0x2BB2      	INCF        FARG_strcpy_from+1, 1, 1
0x003E	0xFFE9C000  	MOVFF       R0, FSR0L
0x0042	0xFFEAC001  	MOVFF       R1, FSR0H
0x0046	0xFFE1C002  	MOVFF       R2, FSR1L
0x004A	0xFFE2C003  	MOVFF       R3, FSR1H
0x004E	0xFFE6CFEE  	MOVFF       POSTINC0, POSTINC1
0x0052	0xFFE9C002  	MOVFF       R2, FSR0L
0x0056	0xFFEAC003  	MOVFF       R3, FSR0H
0x005A	0x52EE      	MOVF        POSTINC0, 1 
0x005C	0xE001      	BZ          L_strcpy35
;__Lib_CString.c,131 :: 		
0x005E	0xD7E2      	BRA         L_strcpy34
L_strcpy35:
;__Lib_CString.c,132 :: 		
0x0060	0xF000C0AF  	MOVFF       FARG_strcpy_to, R0
0x0064	0xF001C0B0  	MOVFF       FARG_strcpy_to+1, R1
;__Lib_CString.c,133 :: 		
L_end_strcpy:
0x0068	0x0012      	RETURN      0
; end of _strcpy
_Mul_16X16_U:
;__Lib_Math.c,440 :: 		
;__Lib_Math.c,447 :: 		
0x006A	0x6A0B      	CLRF        R11, 0
;__Lib_Math.c,448 :: 		
0x006C	0x6A0A      	CLRF        R10, 0
;__Lib_Math.c,449 :: 		
0x006E	0x6A09      	CLRF        R9, 0
;__Lib_Math.c,450 :: 		
0x0070	0x5000      	MOVF        R0, 0, 0
;__Lib_Math.c,451 :: 		
0x0072	0x0204      	MULWF       R4, 0
;__Lib_Math.c,453 :: 		
0x0074	0xF009CFF4  	MOVFF       PRODH, R9
;__Lib_Math.c,454 :: 		
0x0078	0xF008CFF3  	MOVFF       PRODL, R8
;__Lib_Math.c,455 :: 		
0x007C	0x5001      	MOVF        R1, 0, 0
;__Lib_Math.c,456 :: 		
0x007E	0x0205      	MULWF       R5, 0
;__Lib_Math.c,458 :: 		
0x0080	0xF00BCFF4  	MOVFF       PRODH, R11
;__Lib_Math.c,459 :: 		
0x0084	0xF00ACFF3  	MOVFF       PRODL, R10
;__Lib_Math.c,460 :: 		
0x0088	0x5000      	MOVF        R0, 0, 0
;__Lib_Math.c,461 :: 		
0x008A	0x0205      	MULWF       R5, 0
;__Lib_Math.c,463 :: 		
0x008C	0x50F3      	MOVF        PRODL, 0, 0
;__Lib_Math.c,464 :: 		
0x008E	0x2609      	ADDWF       R9, 1, 0
;__Lib_Math.c,465 :: 		
0x0090	0x50F4      	MOVF        PRODH, 0, 0
;__Lib_Math.c,466 :: 		
0x0092	0x220A      	ADDWFC      R10, 1, 0
;__Lib_Math.c,467 :: 		
0x0094	0x6AE8      	CLRF        WREG, 0
;__Lib_Math.c,468 :: 		
0x0096	0x220B      	ADDWFC      R11, 1, 0
;__Lib_Math.c,469 :: 		
0x0098	0x5001      	MOVF        R1, 0, 0
;__Lib_Math.c,470 :: 		
0x009A	0x0204      	MULWF       R4, 0
;__Lib_Math.c,472 :: 		
0x009C	0x50F3      	MOVF        PRODL, 0, 0
;__Lib_Math.c,473 :: 		
0x009E	0x2609      	ADDWF       R9, 1, 0
;__Lib_Math.c,474 :: 		
0x00A0	0x50F4      	MOVF        PRODH, 0, 0
;__Lib_Math.c,475 :: 		
0x00A2	0x220A      	ADDWFC      R10, 1, 0
;__Lib_Math.c,476 :: 		
0x00A4	0x6AE8      	CLRF        WREG, 0
;__Lib_Math.c,477 :: 		
0x00A6	0x220B      	ADDWFC      R11, 1, 0
;__Lib_Math.c,479 :: 		
0x00A8	0xF000C008  	MOVFF       R8, R0
;__Lib_Math.c,480 :: 		
0x00AC	0xF001C009  	MOVFF       R9, R1
;__Lib_Math.c,481 :: 		
0x00B0	0xF002C00A  	MOVFF       R10, R2
;__Lib_Math.c,482 :: 		
0x00B4	0xF003C00B  	MOVFF       R11, R3
;__Lib_Math.c,485 :: 		
L_end_Mul_16X16_U:
0x00B8	0x0012      	RETURN      0
; end of _Mul_16X16_U
___CC2DW:
;__Lib_System.c,21 :: 		
;__Lib_System.c,23 :: 		
_CC2DL_Loop1:
;__Lib_System.c,24 :: 		
0x00BA	0x0009      	TBLRD*+
;__Lib_System.c,25 :: 		
0x00BC	0xFFE6CFF5  	MOVFF       TABLAT, POSTINC1
;__Lib_System.c,26 :: 		
0x00C0	0x0600      	DECF        R0, 1, 0
;__Lib_System.c,27 :: 		
0x00C2	0xE1FB      	BNZ         _CC2DL_Loop1
;__Lib_System.c,28 :: 		
0x00C4	0x0601      	DECF        R1, 1, 0
;__Lib_System.c,29 :: 		
0x00C6	0xE1F9      	BNZ         _CC2DL_Loop1
;__Lib_System.c,31 :: 		
L_end___CC2DW:
0x00C8	0x0012      	RETURN      0
; end of ___CC2DW
_main:
0x00CA	0xF001EC05  	CALL        522, 0
;LedBlinking.c,68 :: 		void main() {
;LedBlinking.c,72 :: 		his.letter ='f';
0x00CE	0x0E66      	MOVLW       102
0x00D0	0x0100      	MOVLB       0
0x00D2	0x6F9D      	MOVWF       _his, 1
;LedBlinking.c,73 :: 		his.number =123;
0x00D4	0x0E7B      	MOVLW       123
0x00D6	0x6F9E      	MOVWF       _his+1, 1
0x00D8	0x0E00      	MOVLW       0
0x00DA	0x6F9F      	MOVWF       _his+2, 1
;LedBlinking.c,74 :: 		my.letter ='p';
0x00DC	0x0E70      	MOVLW       112
0x00DE	0x6FA0      	MOVWF       _my, 1
;LedBlinking.c,75 :: 		temp.years =120;
0x00E0	0x0E78      	MOVLW       120
0x00E2	0x6F89      	MOVWF       _temp+18, 1
0x00E4	0x0E00      	MOVLW       0
0x00E6	0x6F8A      	MOVWF       _temp+19, 1
;LedBlinking.c,76 :: 		time = cast [0].years;
0x00E8	0xF09BC041  	MOVFF       _cast+18, _time
0x00EC	0xF09CC042  	MOVFF       _cast+19, _time+1
;LedBlinking.c,77 :: 		strcpy (input, cast [1].role);
0x00F0	0x0EA5      	MOVLW       _input
0x00F2	0x6FAF      	MOVWF       FARG_strcpy_to, 1
0x00F4	0x0E00      	MOVLW       hi_addr(_input)
0x00F6	0x6FB0      	MOVWF       FARG_strcpy_to+1, 1
0x00F8	0x0E67      	MOVLW       _cast+56
0x00FA	0x6FB1      	MOVWF       FARG_strcpy_from, 1
0x00FC	0x0E00      	MOVLW       hi_addr(_cast+56)
0x00FE	0x6FB2      	MOVWF       FARG_strcpy_from+1, 1
0x0100	0xDF8D      	RCALL       _strcpy
;LedBlinking.c,80 :: 		total = his.number *6;
0x0102	0xF000C09E  	MOVFF       _his+1, R0
0x0106	0xF001C09F  	MOVFF       _his+2, R1
0x010A	0x0E06      	MOVLW       6
0x010C	0x6E04      	MOVWF       R4 
0x010E	0x0E00      	MOVLW       0
0x0110	0x6E05      	MOVWF       R5 
0x0112	0xDFAB      	RCALL       _Mul_16X16_U
0x0114	0xF0A3C000  	MOVFF       R0, _total
0x0118	0xF0A4C001  	MOVFF       R1, _total+1
;LedBlinking.c,81 :: 		total = RNS.age;
0x011C	0xF0A3C025  	MOVFF       _RNS+16, _total
0x0120	0xF0A4C026  	MOVFF       _RNS+17, _total+1
;LedBlinking.c,82 :: 		strcpy (input,RNS.name);//cant use = sign for copying text string to another string variable eg input [10]
0x0124	0x0EA5      	MOVLW       _input
0x0126	0x6FAF      	MOVWF       FARG_strcpy_to, 1
0x0128	0x0E00      	MOVLW       hi_addr(_input)
0x012A	0x6FB0      	MOVWF       FARG_strcpy_to+1, 1
0x012C	0x0E15      	MOVLW       _RNS
0x012E	0x6FB1      	MOVWF       FARG_strcpy_from, 1
0x0130	0x0E00      	MOVLW       hi_addr(_RNS)
0x0132	0x6FB2      	MOVWF       FARG_strcpy_from+1, 1
0x0134	0xDF73      	RCALL       _strcpy
;LedBlinking.c,84 :: 		strcpy (input,RNS.NOR);  //this is my changed comment an next line
0x0136	0x0EA5      	MOVLW       _input
0x0138	0x6FAF      	MOVWF       FARG_strcpy_to, 1
0x013A	0x0E00      	MOVLW       hi_addr(_input)
0x013C	0x6FB0      	MOVWF       FARG_strcpy_to+1, 1
0x013E	0x0E27      	MOVLW       _RNS+18
0x0140	0x6FB1      	MOVWF       FARG_strcpy_from, 1
0x0142	0x0E00      	MOVLW       hi_addr(_RNS+18)
0x0144	0x6FB2      	MOVWF       FARG_strcpy_from+1, 1
0x0146	0xDF6A      	RCALL       _strcpy
;LedBlinking.c,85 :: 		TRISA =1;
0x0148	0x0E01      	MOVLW       1
0x014A	0x6E92      	MOVWF       TRISA 
;LedBlinking.c,92 :: 		TRISA = 0;           // set direction to be output
0x014C	0x6A92      	CLRF        TRISA 
;LedBlinking.c,93 :: 		TRISB = 0;           // set direction to be output
0x014E	0x6A93      	CLRF        TRISB 
;LedBlinking.c,94 :: 		TRISC = 0;           // set direction to be output
0x0150	0x6A94      	CLRF        TRISC 
;LedBlinking.c,95 :: 		TRISD = 0;           // set direction to be output
0x0152	0x6A95      	CLRF        TRISD 
;LedBlinking.c,96 :: 		TRISE = 0;           // set direction to be output
0x0154	0x6A96      	CLRF        TRISE 
;LedBlinking.c,98 :: 		do {
L_main0:
;LedBlinking.c,99 :: 		LATA = 0x00;       // Turn OFF LEDs on PORTA
0x0156	0x6A89      	CLRF        LATA 
;LedBlinking.c,100 :: 		LATB = 0x00;       // Turn OFF LEDs on PORTB
0x0158	0x6A8A      	CLRF        LATB 
;LedBlinking.c,101 :: 		LATC = 0x00;       // Turn OFF LEDs on PORTC
0x015A	0x6A8B      	CLRF        LATC 
;LedBlinking.c,102 :: 		LATD = 0x00;       // Turn OFF LEDs on PORTD
0x015C	0x6A8C      	CLRF        LATD 
;LedBlinking.c,103 :: 		LATE = 0x00;       // Turn OFF LEDs on PORTE
0x015E	0x6A8D      	CLRF        LATE 
;LedBlinking.c,104 :: 		Delay_ms(1000);    // 1 second delay
0x0160	0x0E29      	MOVLW       41
0x0162	0x6E0B      	MOVWF       R11, 0
0x0164	0x0E96      	MOVLW       150
0x0166	0x6E0C      	MOVWF       R12, 0
0x0168	0x0E7F      	MOVLW       127
0x016A	0x6E0D      	MOVWF       R13, 0
L_main3:
0x016C	0x2E0D      	DECFSZ      R13, 1, 0
0x016E	0xD7FE      	BRA         L_main3
0x0170	0x2E0C      	DECFSZ      R12, 1, 0
0x0172	0xD7FC      	BRA         L_main3
0x0174	0x2E0B      	DECFSZ      R11, 1, 0
0x0176	0xD7FA      	BRA         L_main3
;LedBlinking.c,106 :: 		LATA = 0xFF;       // Turn ON LEDs on PORTA
0x0178	0x0EFF      	MOVLW       255
0x017A	0x6E89      	MOVWF       LATA 
;LedBlinking.c,107 :: 		LATB = 0xFF;       // Turn ON LEDs on PORTB
0x017C	0x0EFF      	MOVLW       255
0x017E	0x6E8A      	MOVWF       LATB 
;LedBlinking.c,108 :: 		LATC = 0xFF;       // Turn ON LEDs on PORTC
0x0180	0x0EFF      	MOVLW       255
0x0182	0x6E8B      	MOVWF       LATC 
;LedBlinking.c,109 :: 		LATD = 0xFF;       // Turn ON LEDs on PORTD
0x0184	0x0EFF      	MOVLW       255
0x0186	0x6E8C      	MOVWF       LATD 
;LedBlinking.c,110 :: 		LATE = 0xFF;       // Turn ON LEDs on PORTE
0x0188	0x0EFF      	MOVLW       255
0x018A	0x6E8D      	MOVWF       LATE 
;LedBlinking.c,111 :: 		Delay_ms(1000);    // 1 second delay
0x018C	0x0E29      	MOVLW       41
0x018E	0x6E0B      	MOVWF       R11, 0
0x0190	0x0E96      	MOVLW       150
0x0192	0x6E0C      	MOVWF       R12, 0
0x0194	0x0E7F      	MOVLW       127
0x0196	0x6E0D      	MOVWF       R13, 0
L_main4:
0x0198	0x2E0D      	DECFSZ      R13, 1, 0
0x019A	0xD7FE      	BRA         L_main4
0x019C	0x2E0C      	DECFSZ      R12, 1, 0
0x019E	0xD7FC      	BRA         L_main4
0x01A0	0x2E0B      	DECFSZ      R11, 1, 0
0x01A2	0xD7FA      	BRA         L_main4
;LedBlinking.c,112 :: 		} while(1);          // Endless loop
0x01A4	0xD7D8      	BRA         L_main0
;LedBlinking.c,113 :: 		}
L_end_main:
0x01A6	0xD7FF      	BRA         $+0
; end of _main
0x020A	0xF015EE10  	LFSR        1, 21
0x020E	0x0E62      	MOVLW       98
0x0210	0x6E00      	MOVWF       R0 
0x0212	0x0E01      	MOVLW       1
0x0214	0x6E01      	MOVWF       R1 
0x0216	0x0EA8      	MOVLW       168
0x0218	0x6EF6      	MOVWF       4086 
0x021A	0x0E01      	MOVLW       1
0x021C	0x6EF7      	MOVWF       TBLPTRH 
0x021E	0x0E00      	MOVLW       0
0x0220	0x6EF8      	MOVWF       TBLPTRU 
0x0222	0xF000EC5D  	CALL        186, 0
0x0226	0x0012      	RETURN      0
;LedBlinking.c,0 :: ?ICS_RNS
0x01A8	0x656B ;?ICS_RNS+0
0x01AA	0x6C6C ;?ICS_RNS+2
0x01AC	0x0079 ;?ICS_RNS+4
0x01AE	0x0000 ;?ICS_RNS+6
0x01B0	0x0000 ;?ICS_RNS+8
0x01B2	0x0000 ;?ICS_RNS+10
0x01B4	0x0000 ;?ICS_RNS+12
0x01B6	0x0000 ;?ICS_RNS+14
0x01B8	0x0017 ;?ICS_RNS+16
0x01BA	0x4E49 ;?ICS_RNS+18
0x01BC	0x0056 ;?ICS_RNS+20
0x01BE	0x999A ;?ICS_RNS+22
0x01C0	0x8321 ;?ICS_RNS+24
; end of ?ICS_RNS
;LedBlinking.c,0 :: ?ICS_cast
0x01C2	0x6164 ;?ICS_cast+0
0x01C4	0x6976 ;?ICS_cast+2
0x01C6	0x0064 ;?ICS_cast+4
0x01C8	0x0000 ;?ICS_cast+6
0x01CA	0x0000 ;?ICS_cast+8
0x01CC	0x0000 ;?ICS_cast+10
0x01CE	0x0000 ;?ICS_cast+12
0x01D0	0x0000 ;?ICS_cast+14
0x01D2	0x0000 ;?ICS_cast+16
0x01D4	0x0017 ;?ICS_cast+18
0x01D6	0x7264 ;?ICS_cast+20
0x01D8	0x7669 ;?ICS_cast+22
0x01DA	0x7265 ;?ICS_cast+24
0x01DC	0x0000 ;?ICS_cast+26
0x01DE	0x0000 ;?ICS_cast+28
0x01E0	0x0000 ;?ICS_cast+30
0x01E2	0x0000 ;?ICS_cast+32
0x01E4	0x0000 ;?ICS_cast+34
0x01E6	0x6570 ;?ICS_cast+36
0x01E8	0x6574 ;?ICS_cast+38
0x01EA	0x0072 ;?ICS_cast+40
0x01EC	0x0000 ;?ICS_cast+42
0x01EE	0x0000 ;?ICS_cast+44
0x01F0	0x0000 ;?ICS_cast+46
0x01F2	0x0000 ;?ICS_cast+48
0x01F4	0x0000 ;?ICS_cast+50
0x01F6	0x0000 ;?ICS_cast+52
0x01F8	0x0023 ;?ICS_cast+54
0x01FA	0x6F64 ;?ICS_cast+56
0x01FC	0x7463 ;?ICS_cast+58
0x01FE	0x726F ;?ICS_cast+60
0x0200	0x0000 ;?ICS_cast+62
0x0202	0x0000 ;?ICS_cast+64
0x0204	0x0000 ;?ICS_cast+66
0x0206	0x0000 ;?ICS_cast+68
0x0208	0x0000 ;?ICS_cast+70
; end of ?ICS_cast
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x001C      [78]    _strcpy
0x006A      [80]    _Mul_16X16_U
0x00BA      [16]    ___CC2DW
0x00CA     [222]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    R0
0x0001       [1]    R1
0x0002       [2]    memchr_s_L0
0x0002       [2]    strlen_cp_L0
0x0002       [2]    memset_pp_L0
0x0002       [1]    R2
0x0002       [2]    memcpy_dd_L0
0x0003       [1]    R3
0x0003       [2]    memmove_tt_L0
0x0004       [2]    strcpy_cp_L0
0x0004       [2]    memcpy_ss_L0
0x0004       [2]    strncpy_cp_L0
0x0004       [2]    strncat_cp_L0
0x0004       [2]    strcat_cp_L0
0x0004       [1]    R4
0x0005       [1]    R5
0x0005       [2]    memmove_ff_L0
0x0006       [1]    R6
0x0007       [1]    R7
0x0008       [1]    R8
0x0009       [1]    R9
0x000A       [1]    R10
0x000B       [1]    R11
0x000C       [1]    R12
0x000D       [1]    R13
0x000E       [1]    R14
0x000F       [1]    R15
0x0010       [1]    R16
0x0011       [1]    R17
0x0012       [1]    R18
0x0013       [1]    R19
0x0014       [1]    R20
0x0015      [26]    _RNS
0x002F      [72]    _cast
0x0077      [36]    _temp
0x009B       [2]    _time
0x009D       [3]    _his
0x00A0       [3]    _my
0x00A3       [2]    _total
0x00A5      [10]    _input
0x00AF       [2]    FARG_strcpy_to
0x00B1       [2]    FARG_strcpy_from
0x0F89       [1]    LATA
0x0F8A       [1]    LATB
0x0F8B       [1]    LATC
0x0F8C       [1]    LATD
0x0F8D       [1]    LATE
0x0F92       [1]    TRISA
0x0F93       [1]    TRISB
0x0F94       [1]    TRISC
0x0F95       [1]    TRISD
0x0F96       [1]    TRISE
0x0FD8       [1]    STATUS
0x0FD9       [1]    FSR2L
0x0FDA       [1]    FSR2H
0x0FDE       [1]    POSTINC2
0x0FE0       [1]    BSR
0x0FE1       [1]    FSR1L
0x0FE2       [1]    FSR1H
0x0FE4       [1]    PREINC1
0x0FE6       [1]    POSTINC1
0x0FE7       [1]    INDF1
0x0FE8       [1]    WREG
0x0FE9       [1]    FSR0L
0x0FEA       [1]    FSR0H
0x0FEE       [1]    POSTINC0
0x0FF3       [1]    PRODL
0x0FF4       [1]    PRODH
0x0FF5       [1]    TABLAT
0x0FF6       [1]    TBLPTRL
0x0FF7       [1]    TBLPTRH
0x0FF8       [1]    TBLPTRU
//** Constants locations ** 
//ADDRESS    SIZE    CONSTANT
//----------------------------------------------
0x01A8      [26]    ?ICS_RNS
0x01C2      [72]    ?ICS_cast
